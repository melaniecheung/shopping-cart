{"ast":null,"code":"var _jsxFileName = \"/Users/melaniecheung/Desktop/shopping-cart/frontend/src/components/CartContext.jsx\",\n  _s = $RefreshSig$();\n// import { createContext, useState, useEffect } from \"react\";\n\n// export const CartContext = createContext();\n\n// const CartProvider = ({ children }) => {\n//     const [cart, setCart] = useState([]);\n//     const [amount, setAmount] = useState(0);\n//     const [total, setTotal] = useState(0);\n\n//     useEffect(() => {\n//         const total = cart.reduce((accumulator, currentItem) => {\n//             return accumulator + currentItem.new_price * currentItem.amount\n//         }, 0);\n//         setTotal(total);\n//     });\n\n//     useEffect(() => {\n//         if (cart) {\n//             const cartAmount = cart.reduce((accumulator, currentItem) => {\n//                 return accumulator + currentItem.amount;\n//             }, 0);\n//             setAmount(cartAmount);\n//         }\n//     }, [cart]);\n\n//     const addToCart = (product, id) => {\n//         const newItem = { ... product, amount: 1 };\n//         const cartItem = cart.find(item => {\n//             return item.id === id;\n//         });\n//         if (cartItem) {\n//             const newCart = [...cart].map(item => {\n//                 if (item.id === id) {\n//                     return {...item, amount: cartItem.amount + 1};\n//                 } else {\n//                     return item;\n//                 }\n//             });\n//             setCart(newCart);\n//         } else {\n//             setCart([...cart, newItem]);\n//         }\n//     };\n\n//     const removeFromCart = (id) => {\n//         const newCart = cart.filter(item => {\n//             return item.id !== id;\n//         });\n//         setCart(newCart);\n//     };\n\n//     const increaseAmount = (id) => {\n//         const cartItem = cart.find(item => item.id === id);\n//         addToCart(cartItem, id);\n//     }\n\n//     const decreaseAmount = (id) => {\n//         const cartItem = cart.find((item) => {\n//             return item.id === id;\n//         });\n//         if (cartItem) {\n//             const newCart = cart.map(item => {\n//                 if (item.id === id) {\n//                     return {...item, amount: cartItem.amount - 1 };\n//                 } else {\n//                     return item;\n//                 }\n//             });\n//             setCart(newCart);\n//         } if (cartItem.amount < 2) {\n//             removeFromCart(id);\n//         }\n//     }\n\n//     return (\n//         <CartContext.Provider value={{ cart, addToCart, removeFromCart, increaseAmount, decreaseAmount, amount, total }}>\n//             {children}\n//         </CartContext.Provider>\n//     )\n// }\n\n// export default CartProvider;\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst CartProvider = props => {\n  _s();\n  const [total, setTotal] = useState(0);\n  const getDefaultCart = () => {\n    let cart = {};\n    for (let i = 0; i < 300; i++) {\n      cart[i] = 0;\n    }\n    return cart;\n  };\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n    if (localStorage.getItem(\"auth-token\")) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem(\"auth-token\")}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(resp => resp.json()).then(data => {\n        console.log(data);\n      });\n    }\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n  };\n  useEffect(() => {\n    const total = cart.reduce((accumulator, currentItem) => {\n      return accumulator + currentItem.new_price * currentItem.amount;\n    }, 0);\n    setTotal(total);\n  });\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n        ;\n      }\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    products,\n    getTotalCartItems,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    total\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 7\n  }, this);\n};\n_s(CartProvider, \"28qM9uZmir3r/bu9P2z1/6eutVA=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","CartProvider","props","_s","total","setTotal","getDefaultCart","cart","i","cartItems","setCartItems","addToCart","itemId","prev","localStorage","getItem","fetch","method","headers","Accept","body","JSON","stringify","then","resp","json","data","console","log","removeFromCart","reduce","accumulator","currentItem","new_price","amount","getTotalCartItems","totalItem","item","contextValue","products","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/melaniecheung/Desktop/shopping-cart/frontend/src/components/CartContext.jsx"],"sourcesContent":["// import { createContext, useState, useEffect } from \"react\";\n\n// export const CartContext = createContext();\n\n// const CartProvider = ({ children }) => {\n//     const [cart, setCart] = useState([]);\n//     const [amount, setAmount] = useState(0);\n//     const [total, setTotal] = useState(0);\n\n//     useEffect(() => {\n//         const total = cart.reduce((accumulator, currentItem) => {\n//             return accumulator + currentItem.new_price * currentItem.amount\n//         }, 0);\n//         setTotal(total);\n//     });\n\n//     useEffect(() => {\n//         if (cart) {\n//             const cartAmount = cart.reduce((accumulator, currentItem) => {\n//                 return accumulator + currentItem.amount;\n//             }, 0);\n//             setAmount(cartAmount);\n//         }\n//     }, [cart]);\n\n//     const addToCart = (product, id) => {\n//         const newItem = { ... product, amount: 1 };\n//         const cartItem = cart.find(item => {\n//             return item.id === id;\n//         });\n//         if (cartItem) {\n//             const newCart = [...cart].map(item => {\n//                 if (item.id === id) {\n//                     return {...item, amount: cartItem.amount + 1};\n//                 } else {\n//                     return item;\n//                 }\n//             });\n//             setCart(newCart);\n//         } else {\n//             setCart([...cart, newItem]);\n//         }\n//     };\n\n//     const removeFromCart = (id) => {\n//         const newCart = cart.filter(item => {\n//             return item.id !== id;\n//         });\n//         setCart(newCart);\n//     };\n\n//     const increaseAmount = (id) => {\n//         const cartItem = cart.find(item => item.id === id);\n//         addToCart(cartItem, id);\n//     }\n    \n//     const decreaseAmount = (id) => {\n//         const cartItem = cart.find((item) => {\n//             return item.id === id;\n//         });\n//         if (cartItem) {\n//             const newCart = cart.map(item => {\n//                 if (item.id === id) {\n//                     return {...item, amount: cartItem.amount - 1 };\n//                 } else {\n//                     return item;\n//                 }\n//             });\n//             setCart(newCart);\n//         } if (cartItem.amount < 2) {\n//             removeFromCart(id);\n//         }\n//     }\n\n//     return (\n//         <CartContext.Provider value={{ cart, addToCart, removeFromCart, increaseAmount, decreaseAmount, amount, total }}>\n//             {children}\n//         </CartContext.Provider>\n//     )\n// }\n\n// export default CartProvider;\n\n\n\nimport { createContext, useState, useEffect } from \"react\";\n\nexport const CartContext = createContext();\n\nconst CartProvider = (props) => {\n    const [total, setTotal] = useState(0);\n    const getDefaultCart = () => {\n        let cart = {};\n        for (let i = 0; i < 300; i++) {\n          cart[i] = 0;\n        }\n        return cart;\n      };\n\n      const [cartItems, setCartItems] = useState(getDefaultCart());\n\n    const addToCart = (itemId) => {\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\n        if(localStorage.getItem(\"auth-token\"))\n        {\n        fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n            Accept:'application/form-data',\n            'auth-token':`${localStorage.getItem(\"auth-token\")}`,\n            'Content-Type':'application/json',\n        },\n        body: JSON.stringify({\"itemId\":itemId}),\n        })\n        .then((resp) => resp.json())\n        .then((data) => {console.log(data)});\n        }\n    };\n\n    const removeFromCart = (itemId) => {\n        setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\n    }\n\n        useEffect(() => {\n            const total = cart.reduce((accumulator, currentItem) => {\n                return accumulator + currentItem.new_price * currentItem.amount\n            }, 0);\n            setTotal(total);\n        });\n\n      const getTotalCartItems = () => {\n        let totalItem = 0;\n        for (const item in cartItems) {\n          if (cartItems[item] > 0) {\n            totalItem += cartItems[item];;\n          }\n        }\n        return totalItem;\n      };\n\n    const contextValue = {products, getTotalCartItems, cartItems, addToCart, removeFromCart, total };\n    return (\n      <CartContext.Provider value={contextValue}>\n        {props.children}\n      </CartContext.Provider>\n    );\n}\n\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}